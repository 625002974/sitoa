# vim: filetype=python

## load our own python modules
import system
from build_tools import find_files_recursive

import os

# import build env
Import('env')
local_env = env.Clone()

# Automatically add all source and include files found in the source path
src_base_dir  = os.path.join(local_env['ROOT_DIR'], 'plugins', 'sitoa')
source_files  = find_files_recursive(src_base_dir, ['.c', '.cpp'])
include_files = find_files_recursive(src_base_dir, ['.h'])

if system.os() =='windows':
   local_env.Append(CPPDEFINES=Split('_SITOA_DLL'))
   local_env.Append(LIBPATH = [os.path.join(env['XSISDK_ROOT'], 'lib', 'nt-x86-64')])
else:
   local_env.Append(LIBPATH = [os.path.join(env['XSISDK_ROOT'], '..', 'Application', 'bin')])
   local_env.Append(CCFLAGS = Split('-fvisibility=hidden -Wno-non-virtual-dtor')) # hide symbols by default 
   local_env.Append(LINKFLAGS = Split('-Wl,-rpath="\\$$ORIGIN" -z origin'))

local_env.Append(CPPPATH = [os.path.join(env['XSISDK_ROOT'], 'include')])
local_env.Append(CPPPATH = ['.'])
if system.os() =='windows':
   local_env.Append(LIBS = Split('sicppsdk sicoresdk ai opengl32'))
else:
   local_env.Append(LIBS = Split('sicppsdk sicoresdk ai'))

# make shared or static library
SITOA = local_env.SharedLibrary('sitoa', source_files, SHLIBPREFIX='')

if system.os() == 'windows':
   SITOA_PRJ = local_env.MSVSProject(target = 'sitoa' + env['MSVS']['PROJECTSUFFIX'],
                                     srcs = source_files + include_files,
                                     incs = [],
                                     buildtarget = 'sitoa',
                                     cmdargs = ['-Q -s COMPILER=msvc MODE=debug TARGET_ARCH=x86',
                                                '-Q -s COMPILER=icc MODE=debug TARGET_ARCH=x86',
                                                '-Q -s COMPILER=msvc MODE=opt TARGET_ARCH=x86',
                                                '-Q -s COMPILER=icc MODE=opt TARGET_ARCH=x86'],
                                     variant = ['Debug_MSVC|Win32',
                                                'Debug_ICC|Win32',
                                                'Opt_MSVC|Win32',
                                                'Opt_ICC|Win32'],
                                     auto_build_solution = 0,
                                     nokeep = 1)

   local_env.AlwaysBuild(SITOA_PRJ)
   
   Return('SITOA SITOA_PRJ')
else:
   Return('SITOA')
